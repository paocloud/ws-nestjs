kind: Deployment
apiVersion: apps/v1
metadata:
  name: paonest
  namespace: default
  labels:
    app: paonest
    environment: develop
  annotations:
    deployment.kubernetes.io/revision: '10'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paonest
      tier: backend
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: paonest
        tier: backend
    spec:
      volumes:
        - name: tz-bangkok
          hostPath:
            path: /usr/share/zoneinfo/Asia/Bangkok
      containers:
        - name: paonest
          image: asia.gcr.io/our-cursor-219403/paonest:<VERSION>
          ports:
            - name: api
              containerPort: 5000
              protocol: TCP
          env:
            - name: PORT
              value: '5000'
            - name: DB_HOST
              value: 192.168.241.111
            - name: DB_PORT
              value: '27017'
            - name: DB_USER
              value: nest
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: paonest-secret
                  key: db_pass
            - name: DB_NAME
              value: nest
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: paonest-secret
                  key: jwt_secret
            - name: STAGE
              value: production
          resources: {}
          volumeMounts:
            - name: tz-bangkok
              mountPath: /etc/localtime
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 600
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/v1/healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: gcr-json-key
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
